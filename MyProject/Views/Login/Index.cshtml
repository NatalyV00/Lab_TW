@model MyProject.Models.UserLogin
@using System.Web.Optimization
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="text-center body-bg">
    <h1> Login to your account </h1>
    <form style="margin-bottom:200px;">
    @Html.ValidationSummary(true)
   @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @id = "LoginForm" }))
    {
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.Credential, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Credential, new
        {
        placeholder = "username",
        title = "",
        value = "",
        id = "username",
        @class = "form-control"
        })
    </div>
                
    <div class="form-group">
         @Html.LabelFor(m => m.Password, new { @class = "control-label" })
         @Html.TextBoxFor(m => m.Password, new
               {
                   @class = "form-control",
                   type = "password",
                   title = "",
                   placeholder = "password",
                   value = "",
                   name = "password",
                   id = "password",

               })

    </div>
    <div class="form-check">
      <input type="checkbox" class="form-check-input" id="exampleCheck1">
      <label class="form-check-label" for="exampleCheck1">Check me out</label>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    }
    </form>
</div>

     @section Scripts {      @Scripts.Render("~/bundles/validation/js")

         <script type="text/javascript">
         $(function () {
            $("#LoginForm").validate({
                rules: {
                    Username: {
                        required: true
                        },
                    Password: {
                        required: true
                    }
                },
                submitHandler: function (form) {
                    form.submit();
                },
                errorPlacement: function (error, element) {
                    $(element)
                        .closest("form")
                        .find("label[for='" + element.attr("id") + "']")
                        .append(error);
                },
                errorElement: "span"
            });
         });
            </script>
   }


